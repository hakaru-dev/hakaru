def exponential(alpha prob):
	X <~ uniform(0,1)
	return (-1 * alpha * log(real2prob(X)))

def erlang(shape nat, scale prob) measure(prob):
	gamma(nat2prob(shape), scale)

fn n nat:
	fn lambda prob:
		U <~ exponential(lambda)
		V <~ erlang(n,lambda)
		return real2prob(U/V+1)

